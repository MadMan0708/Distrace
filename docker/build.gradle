apply plugin: 'base'
apply plugin: 'com.bmuschko.docker-remote-api'


import com.bmuschko.gradle.docker.tasks.image.Dockerfile

defaultTasks 'createDockerFile'
description = "Distrace Docker Support"

ext {
    dockerFile = file('distrace/base/Dockerfile')
}

task createDockerfile(type: Dockerfile) {
    destFile = dockerFile
    from 'ubuntu:yakkety'
    maintainer "Jakub Hava"

    environmentVariable "JAVA_HOME", "/usr/lib/jvm/java-8-oracle"

    // Install Java 8
    runCommand """\\
               apt-get -q -y update && \\
               apt-get -y install --no-install-recommends software-properties-common && \\
               add-apt-repository ppa:webupd8team/java && \\
               apt-get -q -y update && \\
               ( echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections ) && \\
               apt-get -y install oracle-java8-installer && \\
               apt-get -y install oracle-java8-set-default && \\
               apt-get clean && \\
               rm -rf \${JAVA_HOME}/*src.zip \\
               \${JAVA_HOME}/lib/missioncontrol \\
               \${JAVA_HOME}/lib/visualvm \\
               \${JAVA_HOME}/lib/*javafx* \\
               \${JAVA_HOME}/jre/lib/plugin.jar \\
               \${JAVA_HOME}/jre/lib/ext/jfxrt.jar \\
               \${JAVA_HOME}/jre/bin/javaws \\
               \${JAVA_HOME}/jre/lib/javaws.jar \\
               \${JAVA_HOME}/jre/lib/desktop \\
               \${JAVA_HOME}/jre/plugin \\
               \${JAVA_HOME}/jre/lib/deploy* \\
               \${JAVA_HOME}/jre/lib/*javafx* \\
               \${JAVA_HOME}/jre/lib/*jfx* \\
               \${JAVA_HOME}/jre/lib/amd64/libdecora_sse.so \\
               \${JAVA_HOME}/jre/lib/amd64/libprism_*.so \\
               \${JAVA_HOME}/jre/lib/amd64/libfxplugins.so \\
               \${JAVA_HOME}/jre/lib/amd64/libglass.so \\
               \${JAVA_HOME}/jre/lib/amd64/libgstreamer-lite.so \\
               \${JAVA_HOME}/jre/lib/amd64/libjavafx*.so \\
               \${JAVA_HOME}/jre/lib/amd64/libjfx*.so""".stripMargin()



    // clone, build and install dependencies for distrace and distrace itself.
    // we do it in one command to minimize the docker image size by removing dependencies
    // required to build the libraries
    runCommand """\\
                apt-get -q -y --no-install-recommends install python \
                git make cmake gcc g++ libboost-system-dev libboost-filesystem-dev && \\
                \
                git clone https://github.com/nanomsg/nanomsg.git /opt/nanomsg && \\
                cd /opt/nanomsg && \\
                git checkout tags/1.0.0 && \\
                mkdir build && cd build && \\
                cmake .. && \\
                cmake --build . && \\
                cmake --build . --target install && ldconfig && \\
                \
                git clone https://github.com/achille-roussel/nanomsgxx.git /opt/nanomsgxx && \\
                cd /opt/nanomsgxx && \\
                git checkout tags/0.2 && \\
                ./waf configure && \\
                ./waf build && \\
                ./waf install && ldconfig && \\
                \
                git clone https://github.com/jakubhava/Distrace.git /opt/distrace && \\
                cd /opt/distrace && \\
                git checkout tags/${docker_tag} && \\
                ./gradlew build -x check && \\
                rm -rf /opt/nanomsg /opt/nanomsgxx  \$HOME/.gradle/caches/ && \\
                apt-get -q -y remove --purge python git make cmake gcc g++ && \\
                apt-get -q -y autoremove""".stripMargin()

    workingDir "/opt/distrace"
}

task cleanDockerfile(type: Delete) {
    delete dockerFile
}

//
// Configure execution graph
//
build.dependsOn createDockerfile
clean.dependsOn cleanDockerfile